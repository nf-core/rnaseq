nextflow_pipeline {

    name "Test pipeline with ribosomal RNA removal"
    script "../main.nf"

    test("Params: --remove_ribo_rna") {

        when {
            params {
                outdir = "$outputDir"
                remove_ribo_rna = true
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, true, ['pipeline_info/*.{html,json,txt}'], null)
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, false, null, 'tests/.nftignore')
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we tests pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/nf_core_rnaseq_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    getRelativePath(stable_name, outputDir),
                    // All files with stable contents
                    stable_path
                ).match() }
            )
        }
    }

    test("Params: --remove_ribo_rna - stub") {

        options "-stub"

        when {
            params {
                outdir = "$outputDir"
                remove_ribo_rna = true
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, true, ['pipeline_info/*.{html,json,txt}'], null)
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, false, null, 'tests/.nftignore')
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we tests pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/nf_core_rnaseq_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    getRelativePath(stable_name, outputDir),
                    // All files with stable contents
                    stable_path
                ).match() }
            )
        }
    }
}
