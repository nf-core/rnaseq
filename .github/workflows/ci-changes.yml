name: nf-test on changes
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  pull_request:
    branches:
      - dev

env:
  NXF_ANSI_LOG: false

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'modules' output variable
      tags: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2

  test_changes:
    name: ${{ matrix.tags }} ${{ matrix.aligner }} ${{ matrix.profile }}
    runs-on: ubuntu-20.04
    needs: changes
    if: needs.changes.outputs.tags != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.changes.outputs.tags) }}"]
        profile: ["docker"] # TODO Add singularity/conda
        aligner: ["hisat2", "salmon", "star_rsem", "star_salmon"] # TODO , "subworkflows", "modules"]
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: /usr/local/bin/
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-nextflow-

      - name: Install Nextflow
        env:
          CAPSULE_LOG: none
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash
          sudo mv nf-test /usr/local/bin/

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a

      - name: Run nf-test
        run: nf-test test tests/pipeline/${{ matrix.aligner }}/*.nf.test --tap=test.tap

      - uses: pcolby/tap-summary@v1
        with:
          path: >-
            test.tap
