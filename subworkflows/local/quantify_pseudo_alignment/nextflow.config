if (!params.skip_pseudo_alignment && params.pseudo_aligner == 'salmon') {
    process {
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SALMON_QUANT' {
            ext.args   = { params.extra_salmon_quant_args ?: '' }
            publishDir = [
                path: { "${params.outdir}/${params.pseudo_aligner}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('_meta_info.json') ? null : filename }
            ]
        }
    }
}

if (!params.skip_pseudo_alignment && params.pseudo_aligner == 'kallisto') {
    process {
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:KALLISTO_QUANT' {
            ext.args = params.extra_kallisto_quant_args ?: ''
            publishDir = [
                path: { "${params.outdir}/${params.pseudo_aligner}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.run_info.json') || filename.endsWith('.log') ? null : filename }
            ]
        }
    }
}

if (!params.skip_pseudo_alignment && params.pseudo_aligner) {
    process {
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:CUSTOM_TX2GENE' {
            publishDir = [
                path: { "${params.outdir}/${params.pseudo_aligner}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:TXIMETA_TXIMPORT' {
            ext.prefix = { "${quant_type}.merged" }
            publishDir = [
                path: { "${params.outdir}/${params.pseudo_aligner}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_.*' {
            ext.args = '--assay_names counts,abundance'
            publishDir = [
                path: { "${params.outdir}/${params.pseudo_aligner}" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.log') ? null : filename }
            ]
        }
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_GENE' {
            ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts" }
        }
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_GENE_SCALED' {
            ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts_scaled" }
        }
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_GENE_LENGTH_SCALED' {
            ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts_length_scaled" }
        }
        withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_TRANSCRIPT' {
            ext.prefix = { "${params.pseudo_aligner}.merged.transcript_counts" }
        }
    }
}
