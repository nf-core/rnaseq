
//
// STAR Salmon alignment options
//

process {
    withName: '.*:QUANTIFY_STAR_SALMON:SALMON_QUANT' {
        ext.args   = { params.extra_salmon_quant_args ?: '' }
        publishDir = [
            path: "${params.outdir}/${params.aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('_meta_info.json') ? null : filename }
        ]
    }

    withName: '.*:QUANTIFY_STAR_SALMON:CUSTOM_TX2GENE' {
        publishDir = [
            path: "${params.outdir}/${params.aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:QUANTIFY_STAR_SALMON:TXIMETA_TXIMPORT' {
        ext.prefix = { "${quant_type}.merged" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:QUANTIFY_STAR_SALMON:SE_.*' {
        ext.prefix = { "${params.pseudo_aligner}.merged" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.log') ? null : filename }
        ]
    }
    withName: '.*:QUANTIFY_STAR_SALMON:SE_GENE' {
        ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts" }
    }
    withName: '.*:QUANTIFY_STAR_SALMON:SE_GENE_SCALED' {
        ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts_scaled" }
    }
    withName: '.*:QUANTIFY_STAR_SALMON:SE_GENE_LENGTH_SCALED' {
        ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts_length_scaled" }
    }
    withName: '.*:QUANTIFY_STAR_SALMON:SE_TRANSCRIPT' {
        ext.prefix = { "${params.pseudo_aligner}.merged.transcript_counts" }
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:SAMTOOLS_SORT' {
        ext.args   = '-n'
        ext.prefix = { "${meta.id}.umi_dedup.transcriptome" }
        publishDir = [
            path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
            mode: params.publish_dir_mode,
            pattern: '*.bam',
            saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
        ]
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:UMITOOLS_PREPAREFORSALMON' {
        ext.prefix = { "${meta.id}.umi_dedup.transcriptome.filtered" }
        publishDir = [
            [
                path: "${params.outdir}/${params.aligner}/umitools/log",
                mode: params.publish_dir_mode,
                pattern: '*.log'
            ],
            [
                path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
            ]
        ]
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.transcriptome.sorted" }
        publishDir = [
            path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
            mode: params.publish_dir_mode,
            pattern: '*.bam',
            saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
        ]
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_INDEX' {
        publishDir = [
            path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
            mode: params.publish_dir_mode,
            pattern: '*.bai',
            saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
        ]
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.transcriptome.sorted.bam" }
        publishDir = [
            path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}/samtools_stats" : params.outdir,
            mode: params.publish_dir_mode,
            pattern: '*.{stats,flagstat,idxstats}',
            saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
        ]
    }

    withName: '.*:BAM_DEDUP_STATS_SAMTOOLS_UMITOOLS_TRANSCRIPTOME:UMITOOLS_DEDUP' {
        ext.args   = { [
            meta.single_end                 ? '' : '--unpaired-reads=discard --chimeric-pairs=discard',
            params.umitools_grouping_method ? "--method='${params.umitools_grouping_method}'" : '',
            params.umitools_umi_separator   ? "--umi-separator='${params.umitools_umi_separator}'" : ''
        ].join(' ').trim() }
        ext.prefix = { "${meta.id}.umi_dedup.transcriptome.sorted" }
        publishDir = [
            [
                path: "${params.outdir}/${params.aligner}/umitools",
                mode: params.publish_dir_mode,
                pattern: '*.tsv'
            ],
            [
                path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
            ]
        ]
    }

    withName: '.*:BAM_DEDUP_STATS_SAMTOOLS_UMITOOLS_TRANSCRIPTOME:SAMTOOLS_INDEX' {
        publishDir = [
            path: params.save_align_intermeds || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
            mode: params.publish_dir_mode,
            pattern: '*.bai',
            saveAs: { params.save_align_intermeds || params.save_umi_intermeds ? it : null }
        ]
    }

    withName: '.*:BAM_DEDUP_STATS_SAMTOOLS_UMITOOLS_TRANSCRIPTOME:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.umi_dedup.transcriptome.sorted.bam" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}/samtools_stats",
            mode: params.publish_dir_mode,
            pattern: '*.{stats,flagstat,idxstats}'
        ]
    }
}

//
// General alignment options
//

process {
    withName: 'NFCORE_RNASEQ:RNASEQ:.*:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.sorted.bam" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}/samtools_stats",
            mode: params.publish_dir_mode,
            pattern: "*.{stats,flagstat,idxstats}"
        ]
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:.*:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.sorted" }
        publishDir = [
            path: { ( ['star_salmon','hisat2'].contains(params.aligner) &&
                    ( params.save_align_intermeds || ( !params.with_umi && params.skip_markduplicates ) )
                ) || params.save_align_intermeds || params.skip_markduplicates ? "${params.outdir}/${params.aligner}" : params.outdir },
            mode: params.publish_dir_mode,
            pattern: "*.bam",
            saveAs: { ( ['star_salmon','hisat2'].contains(params.aligner) &&
                    ( params.save_align_intermeds || ( !params.with_umi && params.skip_markduplicates ) )
                ) || params.save_align_intermeds || params.skip_markduplicates ? it : null }
        ]
    }

    withName: 'NFCORE_RNASEQ:RNASEQ:.*:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_INDEX' {
        ext.args   = { params.bam_csi_index ? '-c' : '' }
        publishDir = [
            path: { ( ['star_salmon','hisat2'].contains(params.aligner) &&
                    ( params.save_align_intermeds || ( !params.with_umi && params.skip_markduplicates ) )
                ) || params.save_align_intermeds || params.skip_markduplicates ? "${params.outdir}/${params.aligner}" : params.outdir },
            mode: params.publish_dir_mode,
            pattern: "*.{bai,csi}",
            saveAs: { ( ['star_salmon','hisat2'].contains(params.aligner) &&
                    ( params.save_align_intermeds || ( !params.with_umi && params.skip_markduplicates ) )
                ) || params.save_align_intermeds || params.skip_markduplicates ? it : null }
        ]
    }

    withName: '.*:BAM_DEDUP_STATS_SAMTOOLS_UMITOOLS_GENOME:UMITOOLS_DEDUP' {
        ext.args   = { [
            meta.single_end                 ? '' : '--unpaired-reads=discard --chimeric-pairs=discard',
            params.umitools_grouping_method ? "--method='${params.umitools_grouping_method}'" : '',
            params.umitools_umi_separator   ? "--umi-separator='${params.umitools_umi_separator}'" : ''
        ].join(' ').trim() }
        ext.prefix = { "${meta.id}.umi_dedup.sorted" }
        publishDir = [
            [
                path: "${params.outdir}/${params.aligner}/umitools",
                mode: params.publish_dir_mode,
                pattern: '*.tsv'
            ],
            [
                path: params.save_align_intermeds || params.with_umi || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
                mode: params.publish_dir_mode,
                pattern: '*.bam',
                saveAs: { params.save_align_intermeds || params.with_umi || params.save_umi_intermeds ? it : null }
            ]
        ]
    }

    withName: '.*:BAM_DEDUP_STATS_SAMTOOLS_UMITOOLS_GENOME:SAMTOOLS_INDEX' {
        ext.args   = { params.bam_csi_index ? '-c' : '' }
        ext.prefix = { "${meta.id}.umi_dedup.sorted" }
        publishDir = [
            path: params.save_align_intermeds || params.with_umi || params.save_umi_intermeds ? "${params.outdir}/${params.aligner}" : params.outdir,
            mode: params.publish_dir_mode,
            pattern: '*.{bai,csi}',
            saveAs: { params.save_align_intermeds || params.with_umi || params.save_umi_intermeds ? it : null }
        ]
    }

    withName: '.*:BAM_DEDUP_STATS_SAMTOOLS_UMITOOLS_GENOME:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.umi_dedup.sorted.bam" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}/samtools_stats",
            mode: params.publish_dir_mode,
            pattern: '*.{stats,flagstat,idxstats}'
        ]
    }
}

//
// bigWig coverage options
//

process {
    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_FORWARD:UCSC_BEDCLIP' {
        ext.prefix = { "${meta.id}.clip.forward" }
        publishDir = [
            enabled: false
        ]
    }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_FORWARD:UCSC_BEDGRAPHTOBIGWIG' {
        ext.prefix = { "${meta.id}.forward" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}/bigwig",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_REVERSE:UCSC_BEDCLIP' {
        ext.prefix = { "${meta.id}.clip.reverse" }
        publishDir = [
            enabled: false
        ]
    }

    withName: '.*:BEDGRAPH_BEDCLIP_BEDGRAPHTOBIGWIG_REVERSE:UCSC_BEDGRAPHTOBIGWIG' {
        ext.prefix = { "${meta.id}.reverse" }
        publishDir = [
            path: "${params.outdir}/${params.aligner}/bigwig",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

//
// DESeq2 QC options
//

process {
    withName: 'DESEQ2_QC_STAR_SALMON' {
        ext.args   = { [
            "--id_col 1",
            "--sample_suffix ''",
            "--count_col 3",
            params.deseq2_vst ? '--vst TRUE' : ''
        ].join(' ').trim() }
        ext.args2  = 'star_salmon'
        publishDir = [
            path: "${params.outdir}/${params.aligner}/deseq2_qc",
            mode: params.publish_dir_mode,
            pattern: "*{RData,pca.vals.txt,plots.pdf,sample.dists.txt,size_factors,log}"
        ]
    }

    withName: 'DESEQ2_QC_RSEM' {
        ext.args   = { [
            "--id_col 1",
            "--sample_suffix ''",
            "--count_col 3",
            params.deseq2_vst ? '--vst TRUE' : ''
        ].join(' ').trim() }
        ext.args2  = 'star_rsem'
        publishDir = [
            path: "${params.outdir}/${params.aligner}/deseq2_qc",
            mode: params.publish_dir_mode,
            pattern: "*{RData,pca.vals.txt,plots.pdf,sample.dists.txt,size_factors,log}"
        ]
    }
}

//
// Pseudo-alignment options
//

process {
    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:CUSTOM_TX2GENE' {
        publishDir = [
            path: "${params.outdir}/${params.pseudo_aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:TXIMETA_TXIMPORT' {
        ext.prefix = { "${quant_type}.merged" }
        publishDir = [
            path: "${params.outdir}/${params.pseudo_aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_.*' {
        ext.args = '--assay_names counts,abundance'
        publishDir = [
            path: "${params.outdir}/${params.pseudo_aligner}",
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.log') ? null : filename }
        ]
    }
    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_GENE' {
        ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts" }
    }
    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_GENE_SCALED' {
        ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts_scaled" }
    }
    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_GENE_LENGTH_SCALED' {
        ext.prefix = { "${params.pseudo_aligner}.merged.gene_counts_length_scaled" }
    }
    withName: '.*:QUANTIFY_PSEUDO_ALIGNMENT:SE_TRANSCRIPT' {
        ext.prefix = { "${params.pseudo_aligner}.merged.transcript_counts" }
    }
    withName: 'DESEQ2_QC_PSEUDO' {
        ext.args   = { [
            "--id_col 1",
            "--sample_suffix ''",
            "--count_col 3",
            params.deseq2_vst ? '--vst TRUE' : ''
        ].join(' ').trim() }
        ext.args2  = { params.pseudo_aligner }
        publishDir = [
            path: "${params.outdir}/${params.pseudo_aligner}/deseq2_qc",
            mode: params.publish_dir_mode,
            pattern: "*{RData,pca.vals.txt,plots.pdf,sample.dists.txt,size_factors,log}"
        ]
    }
}
