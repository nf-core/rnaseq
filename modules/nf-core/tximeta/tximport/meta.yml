---
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "tximeta_tximport"
description: |
  Import transcript-level abundances and estimated counts for gene-level
  analysis packages
keywords:
  - gene
  - kallisto
  - pseudoalignment
  - salmon
  - transcript
tools:
  - "tximeta":
      description: "Transcript Quantification Import with Automatic Metadata"
      homepage: "https://bioconductor.org/packages/release/bioc/html/tximeta.html"
      documentation: "https://bioconductor.org/packages/release/bioc/vignettes/tximeta/inst/doc/tximeta.html"
      tool_dev_url: "https://github.com/thelovelab/tximeta"
      doi: "10.1371/journal.pcbi.1007664"
      licence: ["GPL-2"]

input:
  - meta:
      type: map
      description: |
        Groovy Map containing information related to the experiment as a whole
        e.g. `[ id:'SRP123456' ]`
  - quants:
      type: directory
      description: Paths to subdirectories corresponding to
        sample-wise runs of Salmon or Kallisto
  - meta2:
      type: map
      description: |
        Groovy Map containing reference information related to the species
        reference e.g. `[ id:'yeast' ]`
  - tx2gene:
      type: file
      description: A transcript to gene mapping table such as those generated
        by custom/tx2gene
      pattern: "*.{csv,tsv}"
  - meta3:
      type: map
      description: |
        Groovy Map containing information related to the experiment as a whole
        e.g. `[ id:'SRP123456' ]`
  - coldata:
      type: file
      description: |
        Optional 'coldata' file equivalent to a sample sheet where the first
        column corresponds to the sample names (directory names in the input
        salmon/ kallisto results)
      pattern: "*.{csv,tsv}"
  - quant_type:
      type: string
      description: Quantification type, 'kallisto' or 'salmon'

output:
  - meta:
      type: map
      description: |
        Groovy Map containing information related to the experiment as a whole
        e.g. `[ id:'SRP123456' ]`
  - tpm_gene:
      type: file
      description: |
        Abundance (TPM) values derived from tximport output after
        summarizeToGene(), without a 'countsFromAbundance' specification
      pattern: "*gene_tpm.tsv"
  - counts_gene:
      type: file
      description: |
        Count values derived from tximport output after
        summarizeToGene(), without a 'countsFromAbundance' specification
      pattern: "*gene_counts.tsv"
  - counts_gene_length_scaled:
      type: file
      description: |
        Count values derived from tximport output after summarizeToGene(), with
        a 'countsFromAbundance' specification of 'lengthScaledTPM'
      pattern: "*gene_counts_length_scaled.tsv"
  - counts_gene_scaled:
      type: file
      description: |
        Count values derived from tximport output after summarizeToGene(), with
        a 'countsFromAbundance' specification of 'scaledTPM'
      pattern: "*gene_counts_scaled.tsv"
  - lengths_gene:
      type: file
      description: |
        Length values derived from tximport output after summarizeToGene(),
        without a 'countsFromAbundance' specification
      pattern: "*gene_lengths.tsv"
  - tpm_transcript:
      type: file
      description: |
        Abundance (TPM) values derived from tximport output without
        summarizeToGene(), without a 'countsFromAbundance' specification
      pattern: "*transcript_tpm.tsv"
  - counts_transcript:
      type: file
      description: |
        Count values derived from tximport output without
        summarizeToGene(), without a 'countsFromAbundance' specification
      pattern: "*transcript_counts.tsv"
  - lengths_transcript:
      type: file
      description: |
        Length values derived from tximport output without summarizeToGene(),
        without a 'countsFromAbundance' specification
      pattern: "*gene_lengths.tsv"
  - versions:
      type: file
      description: File containing software versions
      pattern: "versions.yml"

authors:
  - "@pinin4fjords"
maintainers:
  - "@pinin4fjords"
