# This is the nf-core CI workflow configuration for GitHub Actions
name: nf-core CI

# This workflow is triggered when a pull request is made to the 'dev' branch or when a new release is published
on:
  pull_request:
    branches:
      - dev
  release:
    types: [published]

# Setting environment variable for Nextflow logs
env:
  NXF_ANSI_LOG: false

# Define the jobs to be run in parallel
jobs:
  test:
    # Name the job with the corresponding profile, Nextflow version and aligner
    name: Run ${{ matrix.profile }}-${{ matrix.NXF_VER }}-${{ matrix.aligner }} pipeline test

    # Set the condition for running the job
    if: "${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/rnaseq') }}"

    # Specify the OS for the job
    runs-on: ubuntu-latest

    # Define the matrix for different Nextflow versions, profiles and aligners
    strategy:
      matrix:
        NXF_VER:
          - "latest-everything"
        profile: ["docker"]
        aligner: ["salmon", "hisat2", "star_rsem", "star_salmon"]

    # Define the steps for the job
    steps:
      # Checkout the pipeline code from the repository
      - name: Check out pipeline code
        uses: actions/checkout@v3

      # Cache Test Data
      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-nextflow-

      # Install the specified version of Nextflow
      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      # Install nf-test
      - name: Install nf-test
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash
          sudo mv nf-test /usr/local/bin/

      # Run nf-test with the specified aligner and output test results in TAP format
      - name: Run nf-test
        run: |
          nf-test test tests/pipeline/${{ matrix.aligner }}/ --tap=test.tap

      # If the test fails, output the software_versions.yml using the 'batcat' utility
      - name: Output log on failure
        if: failure()
        run: |
          sudo apt install bat > /dev/null
          batcat --decorations=always --color=always /home/runner/work/rnaseq/rnaseq/.nf-test/tests/*/output/pipeline_info/software_versions.yml

      # Use TAP summary to display test results
      - uses: pcolby/tap-summary@v1
        with:
          path: >-
            test.tap
